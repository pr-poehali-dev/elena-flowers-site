import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';
import { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';

interface Product {
  id: number;
  name: string;
  price: number;
  category: string;
  image: string;
  discount?: number;
}

interface CartItem extends Product {
  quantity: number;
}

const Index = () => {
  const [cartItems, setCartItems] = useState<CartItem[]>([]);
  const [aiBudget, setAiBudget] = useState('');
  const [deliveryForm, setDeliveryForm] = useState({
    name: '',
    phone: '',
    address: '',
    date: '',
    time: ''
  });

  const products: Product[] = [
    { id: 1, name: '–ë—É–∫–µ—Ç —Ä–æ–∑ "–ù–µ–∂–Ω–æ—Å—Ç—å"', price: 3500, category: 'flowers', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/8357e640-7f9d-4068-b85c-914b431246ed.jpg' },
    { id: 2, name: '–•—Ä–∏–∑–∞–Ω—Ç–µ–º—ã –º–∏–∫—Å', price: 2200, category: 'flowers', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/2c5fdcc6-809c-42a4-b7a7-70c1de41e10a.jpg' },
    { id: 3, name: '–ì—Ä—É–Ω—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π 10–ª', price: 450, category: 'soil', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/88f0082d-c9ab-4167-986b-a34110c93177.jpg' },
    { id: 4, name: '–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∏–π –≥–æ—Ä—à–æ–∫', price: 890, category: 'pots', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/88f0082d-c9ab-4167-986b-a34110c93177.jpg' },
    { id: 5, name: '–¢—é–ª—å–ø–∞–Ω—ã "–í–µ—Å–Ω–∞"', price: 1800, category: 'flowers', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/2c5fdcc6-809c-42a4-b7a7-70c1de41e10a.jpg', discount: 30 },
    { id: 6, name: '–ü–∏–æ–Ω—ã –ø—Ä–µ–º–∏—É–º', price: 4500, category: 'flowers', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/8357e640-7f9d-4068-b85c-914b431246ed.jpg', discount: 20 },
    { id: 7, name: '–°–≤–∞–¥–µ–±–Ω—ã–π –±—É–∫–µ—Ç', price: 8500, category: 'flowers', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/2d20822b-04d5-42b1-aee7-9d9d6578df9c.jpg' },
    { id: 8, name: '–í–µ—Å–µ–Ω–Ω–∏–π –º–∏–∫—Å', price: 2500, category: 'flowers', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/a80fc7ba-5f6c-407c-8e0f-ae409b720eba.jpg' },
    { id: 9, name: '–†–æ–º–∞–Ω—Ç–∏–∫–∞', price: 4500, category: 'flowers', image: 'https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/78b4bb1e-ee2b-4951-9d97-dfb88c75c1d2.jpg' },
  ];

  const reviews = [
    { id: 1, name: '–ê–Ω–Ω–∞ –ö.', rating: 5, text: '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Ü–≤–µ—Ç—ã! –î–æ—Å—Ç–∞–≤–∏–ª–∏ –≤–æ–≤—Ä–µ–º—è, –±—É–∫–µ—Ç —Å–≤–µ–∂–∏–π –∏ –∫—Ä–∞—Å–∏–≤—ã–π. –°–ø–∞—Å–∏–±–æ!' },
    { id: 2, name: '–ú–∏—Ö–∞–∏–ª –ü.', rating: 5, text: '–ò–ò-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±—É–∫–µ—Ç–æ–≤ - –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ö–æ–¥–∫–∞! –ü–æ–º–æ–≥ –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫.' },
    { id: 3, name: '–ï–ª–µ–Ω–∞ –°.', rating: 5, text: '–û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å, —É–¥–æ–±–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞. –ë—É–¥—É –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –µ—â–µ!' },
  ];

  const addToCart = (product: Product) => {
    setCartItems(prev => {
      const existing = prev.find(item => item.id === product.id);
      if (existing) {
        return prev.map(item => 
          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item
        );
      }
      return [...prev, { ...product, quantity: 1 }];
    });
    toast.success('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É üéâ', {
      duration: 2000,
      icon: 'üõçÔ∏è'
    });
  };

  const generateBouquet = () => {
    if (!aiBudget || parseFloat(aiBudget) < 1000) {
      toast.error('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±—É–∫–µ—Ç–∞ - 1000‚ÇΩ');
      return;
    }
    
    const budget = parseFloat(aiBudget);
    const composition = [];
    
    if (budget >= 3000) {
      composition.push('15 —Ä–æ–∑ —Ä–∞–∑–Ω—ã—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤');
    }
    if (budget >= 2000) {
      composition.push('7 —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º');
    }
    if (budget >= 1500) {
      composition.push('–ó–µ–ª–µ–Ω—å –∏ –¥–µ–∫–æ—Ä');
    }
    
    toast.success(
      `–ë—É–∫–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω! –°–æ—Å—Ç–∞–≤: ${composition.join(', ')}. –°—Ç–æ–∏–º–æ—Å—Ç—å: ${budget}‚ÇΩ`,
      { duration: 5000 }
    );
  };

  const calculateTotal = () => {
    return cartItems.reduce((sum, item) => {
      const price = item.discount ? item.price * (1 - item.discount / 100) : item.price;
      return sum + price * item.quantity;
    }, 0);
  };

  const handleSubmitDelivery = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (cartItems.length === 0) {
      toast.error('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º.');
      return;
    }

    const orderData = {
      name: deliveryForm.name,
      phone: deliveryForm.phone,
      address: deliveryForm.address,
      date: deliveryForm.date,
      time: deliveryForm.time,
      items: cartItems,
      total: calculateTotal()
    };

    try {
      const response = await fetch('https://functions.poehali.dev/a0cd401c-7c45-4fc7-9713-034f895ea620', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(orderData)
      });

      const result = await response.json();

      if (response.ok && result.success) {
        toast.success('–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram! –°–∫–∏–¥–∫–∞ 25% –ø—Ä–∏–º–µ–Ω–µ–Ω–∞.');
        setDeliveryForm({ name: '', phone: '', address: '', date: '', time: '' });
        setCartItems([]);
      } else {
        toast.error(result.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞');
      }
    } catch (error) {
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  };

  const handleTelegramOrder = () => {
    if (cartItems.length === 0) {
      toast.error('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –∑–∞–∫–∞–∑–æ–º.');
      return;
    }

    const itemsList = cartItems
      .map(item => `${item.name} x${item.quantity}`)
      .join(', ');
    
    const total = Math.round(calculateTotal() * 0.75);
    const message = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å: ${itemsList}. –°—É–º–º–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π 25%: ${total}‚ÇΩ`;
    
    const telegramUrl = `https://t.me/pnkma?text=${encodeURIComponent(message)}`;
    window.open(telegramUrl, '_blank');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 via-white to-green-50">
      <header className="sticky top-0 z-50 bg-white/80 backdrop-blur-md border-b border-pink-100">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="text-4xl animate-float">üå∏</div>
              <div>
                <h1 className="text-3xl font-bold text-pink-600">Elena's Flowers</h1>
                <p className="text-sm text-muted-foreground">–î–æ—Å—Ç–∞–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤ –∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ñ–ª–æ—Ä–∏—Å—Ç–∏–∫–∏</p>
              </div>
            </div>
            
            <Sheet>
              <SheetTrigger asChild>
                <Button variant="outline" size="lg" className="relative hover:scale-110 transition-transform">
                  <Icon name="ShoppingCart" size={20} />
                  {cartItems.length > 0 && (
                    <Badge className="absolute -top-2 -right-2 h-6 w-6 rounded-full p-0 flex items-center justify-center animate-scale-in">
                      {cartItems.length}
                    </Badge>
                  )}
                </Button>
              </SheetTrigger>
              <SheetContent>
                <SheetHeader>
                  <SheetTitle>–ö–æ—Ä–∑–∏–Ω–∞</SheetTitle>
                  <SheetDescription>
                    {cartItems.length === 0 ? '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞' : `–¢–æ–≤–∞—Ä–æ–≤: ${cartItems.length}`}
                  </SheetDescription>
                </SheetHeader>
                
                <div className="mt-6 space-y-4">
                  {cartItems.map(item => (
                    <div key={item.id} className="flex items-center gap-3 border-b pb-3">
                      <img src={item.image} alt={item.name} className="w-16 h-16 object-cover rounded" />
                      <div className="flex-1">
                        <p className="font-medium text-sm">{item.name}</p>
                        <p className="text-sm text-muted-foreground">
                          {item.quantity} √ó {item.discount ? 
                            <><span className="line-through">{item.price}‚ÇΩ</span> {Math.round(item.price * (1 - item.discount / 100))}‚ÇΩ</> 
                            : `${item.price}‚ÇΩ`}
                        </p>
                      </div>
                    </div>
                  ))}
                  
                  {cartItems.length > 0 && (
                    <div className="pt-4 border-t">
                      <div className="flex justify-between text-lg font-bold mb-2">
                        <span>–ò—Ç–æ–≥–æ:</span>
                        <span>{Math.round(calculateTotal())}‚ÇΩ</span>
                      </div>
                      <div className="text-sm text-muted-foreground mb-4">
                        –°–æ —Å–∫–∏–¥–∫–æ–π 25%: {Math.round(calculateTotal() * 0.75)}‚ÇΩ
                      </div>
                      <Button 
                        className="w-full mb-2" 
                        size="lg"
                        onClick={handleTelegramOrder}
                      >
                        <Icon name="MessageCircle" size={20} className="mr-2" />
                        –ó–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ Telegram
                      </Button>
                    </div>
                  )}
                </div>
              </SheetContent>
            </Sheet>
          </div>
        </div>
      </header>

      <section className="relative py-20 overflow-hidden">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto text-center">
            <Badge className="mb-4 text-lg px-6 py-2 bg-accent animate-fade-in">
              üéâ –°–∫–∏–¥–∫–∞ 25% –Ω–∞ –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç–∞–≤–∫—É!
            </Badge>
            <h2 className="text-6xl font-bold mb-6 bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent animate-fade-in" style={{animationDelay: '0.1s'}}>
              –°–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π
            </h2>
            <p className="text-xl text-muted-foreground mb-8 animate-fade-in" style={{animationDelay: '0.2s'}}>
              –°–æ–∑–¥–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –±—É–∫–µ—Ç —Å –ø–æ–º–æ—â—å—é –ò–ò –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –∫–æ–º–ø–æ–∑–∏—Ü–∏–π
            </p>
            <div className="flex gap-4 justify-center animate-fade-in" style={{animationDelay: '0.3s'}}>
              <Button size="lg" className="text-lg px-8 hover:scale-105 transition-all duration-300 hover:shadow-lg">
                <Icon name="Sparkles" size={20} className="mr-2" />
                –ò–ò-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±—É–∫–µ—Ç–æ–≤
              </Button>
              <Button size="lg" variant="outline" className="text-lg px-8 hover:scale-105 transition-all duration-300 hover:shadow-lg">
                –ö–∞—Ç–∞–ª–æ–≥
              </Button>
            </div>
          </div>
        </div>
      </section>

      <section className="py-16 bg-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12 animate-slide-up">
            <h3 className="text-4xl font-bold mb-4">üåü –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±—É–∫–µ—Ç—ã</h3>
            <p className="text-lg text-muted-foreground">–ö–æ–º–ø–æ–∑–∏—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±–∏—Ä–∞—é—Ç —á–∞—â–µ –≤—Å–µ–≥–æ</p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
            <Card className="overflow-hidden hover-scale group">
              <div className="relative overflow-hidden">
                <img 
                  src="https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/2d20822b-04d5-42b1-aee7-9d9d6578df9c.jpg"
                  alt="–°–≤–∞–¥–µ–±–Ω—ã–π –±—É–∫–µ—Ç"
                  className="w-full h-80 object-cover transition-transform duration-500 group-hover:scale-110"
                />
                <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
              </div>
              <CardHeader>
                <CardTitle className="text-2xl">–°–≤–∞–¥–µ–±–Ω—ã–π –±—É–∫–µ—Ç</CardTitle>
                <CardDescription className="text-lg">
                  –ë–µ–ª—ã–µ —Ä–æ–∑—ã –∏ –ø–∏–æ–Ω—ã –¥–ª—è —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞
                </CardDescription>
              </CardHeader>
              <CardFooter className="flex justify-between items-center">
                <span className="text-2xl font-bold text-pink-600">8500‚ÇΩ</span>
                <Button onClick={() => addToCart(products[6])}>
                  <Icon name="ShoppingCart" size={18} className="mr-2" />
                  –ó–∞–∫–∞–∑–∞—Ç—å
                </Button>
              </CardFooter>
            </Card>

            <Card className="overflow-hidden hover-scale group animate-slide-up" style={{animationDelay: '0.2s'}}>
              <div className="relative overflow-hidden">
                <img 
                  src="https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/a80fc7ba-5f6c-407c-8e0f-ae409b720eba.jpg"
                  alt="–í–µ—Å–µ–Ω–Ω–∏–π –º–∏–∫—Å"
                  className="w-full h-80 object-cover transition-transform duration-500 group-hover:scale-110"
                />
                <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
              </div>
              <CardHeader>
                <CardTitle className="text-2xl">–í–µ—Å–µ–Ω–Ω–∏–π –º–∏–∫—Å</CardTitle>
                <CardDescription className="text-lg">
                  –Ø—Ä–∫–∏–µ —Ç—é–ª—å–ø–∞–Ω—ã –∏ —Å–µ–∑–æ–Ω–Ω—ã–µ —Ü–≤–µ—Ç—ã
                </CardDescription>
              </CardHeader>
              <CardFooter className="flex justify-between items-center">
                <span className="text-2xl font-bold text-pink-600">2500‚ÇΩ</span>
                <Button onClick={() => addToCart(products[7])}>
                  <Icon name="ShoppingCart" size={18} className="mr-2" />
                  –ó–∞–∫–∞–∑–∞—Ç—å
                </Button>
              </CardFooter>
            </Card>

            <Card className="overflow-hidden hover-scale group animate-slide-up" style={{animationDelay: '0.3s'}}>
              <div className="relative overflow-hidden">
                <img 
                  src="https://cdn.poehali.dev/projects/57525442-6faa-4c81-bc25-dfbf0d7c0151/files/78b4bb1e-ee2b-4951-9d97-dfb88c75c1d2.jpg"
                  alt="–†–æ–º–∞–Ω—Ç–∏–∫–∞"
                  className="w-full h-80 object-cover transition-transform duration-500 group-hover:scale-110"
                />
                <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
              </div>
              <CardHeader>
                <CardTitle className="text-2xl">–†–æ–º–∞–Ω—Ç–∏–∫–∞</CardTitle>
                <CardDescription className="text-lg">
                  –ö—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã –ø—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å–∞
                </CardDescription>
              </CardHeader>
              <CardFooter className="flex justify-between items-center">
                <span className="text-2xl font-bold text-pink-600">4500‚ÇΩ</span>
                <Button onClick={() => addToCart(products[8])}>
                  <Icon name="ShoppingCart" size={18} className="mr-2" />
                  –ó–∞–∫–∞–∑–∞—Ç—å
                </Button>
              </CardFooter>
            </Card>
          </div>
        </div>
      </section>

      <section className="py-16 bg-white/50">
        <div className="container mx-auto px-4">
          <h3 className="text-4xl font-bold text-center mb-12">–ö–∞—Ç–∞–ª–æ–≥</h3>
          
          <Tabs defaultValue="all" className="w-full">
            <TabsList className="grid w-full max-w-2xl mx-auto grid-cols-5 mb-8">
              <TabsTrigger value="all">–í—Å–µ</TabsTrigger>
              <TabsTrigger value="flowers">–¶–≤–µ—Ç—ã</TabsTrigger>
              <TabsTrigger value="soil">–ì—Ä—É–Ω—Ç—ã</TabsTrigger>
              <TabsTrigger value="pots">–ì–æ—Ä—à–∫–∏</TabsTrigger>
              <TabsTrigger value="plants">–†–∞—Å—Ç–µ–Ω–∏—è</TabsTrigger>
            </TabsList>
            
            {['all', 'flowers', 'soil', 'pots', 'plants'].map(category => (
              <TabsContent key={category} value={category} className="mt-8">
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {products
                    .filter(p => category === 'all' || p.category === category)
                    .map(product => (
                      <Card key={product.id} className="overflow-hidden hover-scale">
                        <div className="relative">
                          <img 
                            src={product.image} 
                            alt={product.name}
                            className="w-full h-64 object-cover"
                          />
                          {product.discount && (
                            <Badge className="absolute top-3 right-3 bg-red-500">
                              -{product.discount}%
                            </Badge>
                          )}
                        </div>
                        <CardHeader>
                          <CardTitle className="text-xl">{product.name}</CardTitle>
                          <CardDescription>
                            {product.discount ? (
                              <div className="flex items-center gap-2">
                                <span className="text-2xl font-bold text-pink-600">
                                  {Math.round(product.price * (1 - product.discount / 100))}‚ÇΩ
                                </span>
                                <span className="text-lg line-through text-muted-foreground">
                                  {product.price}‚ÇΩ
                                </span>
                              </div>
                            ) : (
                              <span className="text-2xl font-bold text-pink-600">{product.price}‚ÇΩ</span>
                            )}
                          </CardDescription>
                        </CardHeader>
                        <CardFooter>
                          <Button 
                            className="w-full" 
                            onClick={() => addToCart(product)}
                          >
                            <Icon name="ShoppingCart" size={18} className="mr-2" />
                            –í –∫–æ—Ä–∑–∏–Ω—É
                          </Button>
                        </CardFooter>
                      </Card>
                    ))}
                </div>
              </TabsContent>
            ))}
          </Tabs>
        </div>
      </section>

      <section className="py-16 bg-gradient-to-r from-purple-100 to-pink-100">
        <div className="container mx-auto px-4">
          <div className="max-w-2xl mx-auto">
            <div className="text-center mb-8">
              <Icon name="Sparkles" size={48} className="mx-auto mb-4 text-accent" />
              <h3 className="text-4xl font-bold mb-4">–ò–ò-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±—É–∫–µ—Ç–æ–≤</h3>
              <p className="text-lg text-muted-foreground">
                –£–∫–∞–∂–∏—Ç–µ –±—é–¥–∂–µ—Ç, –∏ –º—ã –ø–æ–¥–±–µ—Ä–µ–º –∏–¥–µ–∞–ª—å–Ω—ã–π –±—É–∫–µ—Ç –∏–∑ —Ä–æ–∑ –∏ —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º
              </p>
            </div>
            
            <Card>
              <CardHeader>
                <CardTitle>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –±—É–∫–µ—Ç</CardTitle>
                <CardDescription>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1000‚ÇΩ</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium mb-2">–í–∞—à –±—é–¥–∂–µ—Ç (‚ÇΩ)</label>
                    <Input 
                      type="number" 
                      placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 3000"
                      value={aiBudget}
                      onChange={(e) => setAiBudget(e.target.value)}
                      min="1000"
                    />
                  </div>
                  <Button className="w-full" size="lg" onClick={generateBouquet}>
                    <Icon name="Wand2" size={20} className="mr-2" />
                    –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±—É–∫–µ—Ç
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      <section className="py-16 bg-white/50">
        <div className="container mx-auto px-4">
          <h3 className="text-4xl font-bold text-center mb-4">üî• –ì–æ—Ä—è—â–∏–µ —Å–∫–∏–¥–∫–∏</h3>
          <p className="text-center text-muted-foreground mb-12">–£—Å–ø–µ–π—Ç–µ –∫—É–ø–∏—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π!</p>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto">
            {products
              .filter(p => p.discount)
              .map(product => (
                <Card key={product.id} className="overflow-hidden hover-scale border-2 border-red-200">
                  <div className="flex gap-4">
                    <img 
                      src={product.image} 
                      alt={product.name}
                      className="w-32 h-32 object-cover"
                    />
                    <div className="flex-1 p-4">
                      <Badge className="mb-2 bg-red-500">-{product.discount}%</Badge>
                      <h4 className="font-bold text-lg mb-2">{product.name}</h4>
                      <div className="flex items-center gap-2 mb-3">
                        <span className="text-xl font-bold text-pink-600">
                          {Math.round(product.price * (1 - product.discount! / 100))}‚ÇΩ
                        </span>
                        <span className="line-through text-muted-foreground">
                          {product.price}‚ÇΩ
                        </span>
                      </div>
                      <Button size="sm" onClick={() => addToCart(product)}>
                        –ö—É–ø–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                </Card>
              ))}
          </div>
        </div>
      </section>

      <section className="py-16 bg-gradient-to-r from-green-100 to-blue-100">
        <div className="container mx-auto px-4">
          <div className="max-w-2xl mx-auto">
            <div className="text-center mb-8">
              <Icon name="Truck" size={48} className="mx-auto mb-4 text-green-600" />
              <h3 className="text-4xl font-bold mb-4">–î–æ—Å—Ç–∞–≤–∫–∞</h3>
              <Badge className="text-lg px-6 py-2 bg-green-500">
                25% —Å–∫–∏–¥–∫–∞ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑!
              </Badge>
            </div>
            
            <Card>
              <CardHeader>
                <CardTitle>–û—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É</CardTitle>
                <CardDescription>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —á–µ—Ä–µ–∑ Telegram</CardDescription>
              </CardHeader>
              <CardContent>
                <form onSubmit={handleSubmitDelivery} className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium mb-2">–§–ò–û</label>
                    <Input 
                      required
                      placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                      value={deliveryForm.name}
                      onChange={(e) => setDeliveryForm({...deliveryForm, name: e.target.value})}
                    />
                  </div>
                  
                  <div>
                    <label className="block text-sm font-medium mb-2">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                    <Input 
                      required
                      type="tel"
                      placeholder="+7 (999) 123-45-67"
                      value={deliveryForm.phone}
                      onChange={(e) => setDeliveryForm({...deliveryForm, phone: e.target.value})}
                    />
                  </div>
                  
                  <div>
                    <label className="block text-sm font-medium mb-2">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</label>
                    <Textarea 
                      required
                      placeholder="–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                      value={deliveryForm.address}
                      onChange={(e) => setDeliveryForm({...deliveryForm, address: e.target.value})}
                    />
                  </div>
                  
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm font-medium mb-2">–î–∞—Ç–∞</label>
                      <Input 
                        required
                        type="date"
                        value={deliveryForm.date}
                        onChange={(e) => setDeliveryForm({...deliveryForm, date: e.target.value})}
                      />
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium mb-2">–í—Ä–µ–º—è</label>
                      <Input 
                        required
                        type="time"
                        value={deliveryForm.time}
                        onChange={(e) => setDeliveryForm({...deliveryForm, time: e.target.value})}
                      />
                    </div>
                  </div>
                  
                  <div className="flex gap-3">
                    <Button type="submit" className="flex-1" size="lg">
                      <Icon name="Send" size={20} className="mr-2" />
                      –û—Ñ–æ—Ä–º–∏—Ç—å
                    </Button>
                    <Button 
                      type="button" 
                      variant="outline" 
                      size="lg" 
                      className="flex-1"
                      onClick={handleTelegramOrder}
                    >
                      <Icon name="MessageCircle" size={20} className="mr-2" />
                      Telegram
                    </Button>
                  </div>
                </form>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      <section className="py-16 bg-white/50">
        <div className="container mx-auto px-4">
          <h3 className="text-4xl font-bold text-center mb-12">–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</h3>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto">
            {reviews.map(review => (
              <Card key={review.id}>
                <CardHeader>
                  <div className="flex items-center gap-2 mb-2">
                    <div className="w-10 h-10 rounded-full bg-pink-200 flex items-center justify-center">
                      <Icon name="User" size={20} />
                    </div>
                    <CardTitle className="text-lg">{review.name}</CardTitle>
                  </div>
                  <div className="flex gap-1">
                    {[...Array(review.rating)].map((_, i) => (
                      <Icon key={i} name="Star" size={16} className="text-yellow-500 fill-yellow-500" />
                    ))}
                  </div>
                </CardHeader>
                <CardContent>
                  <p className="text-muted-foreground">{review.text}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <footer className="bg-gradient-to-r from-pink-600 to-purple-600 text-white py-12">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div>
              <h4 className="text-2xl font-bold mb-4">Elena's Flowers</h4>
              <p className="text-pink-100">–°–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã —Å –ª—é–±–æ–≤—å—é</p>
            </div>
            
            <div>
              <h5 className="font-bold mb-3">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h5>
              <div className="space-y-2 text-pink-100">
                <p className="flex items-center gap-2">
                  <Icon name="Phone" size={16} />
                  +7 (999) 123-45-67
                </p>
                <p className="flex items-center gap-2">
                  <Icon name="Mail" size={16} />
                  info@elenasflowers.ru
                </p>
              </div>
            </div>
            
            <div>
              <h5 className="font-bold mb-3">–û –Ω–∞—Å</h5>
              <p className="text-pink-100">
                –ú—ã —Å–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–æ—Ç—É —É–∂–µ –±–æ–ª–µ–µ 10 –ª–µ—Ç. –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º—É –≥–æ—Ä–æ–¥—É.
              </p>
            </div>
          </div>
          
          <div className="border-t border-pink-400 mt-8 pt-8 text-center text-pink-100">
            <p>¬© 2024 Elena's Flowers. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>

      <a
        href="https://t.me/pnkma"
        target="_blank"
        rel="noopener noreferrer"
        className="fixed bottom-6 right-6 z-50 bg-gradient-to-r from-blue-500 to-blue-600 text-white p-4 rounded-full shadow-lg hover:scale-110 transition-all duration-300 hover:shadow-2xl animate-pulse-slow"
        aria-label="–°–≤—è–∑–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Telegram"
      >
        <Icon name="MessageCircle" size={28} />
      </a>
    </div>
  );
};

export default Index;